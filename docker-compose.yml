version: '3.8'

services:
  nuki-monitor:
    build:
      context: .
      dockerfile: ./docker/monitor/Dockerfile
    container_name: nuki-monitor
    restart: unless-stopped
    volumes:
      - nuki_config:/app/config:rw
      - nuki_logs:/app/logs:rw
      - nuki_data:/app/data:rw
      - nuki_session:/app/flask_session:rw
    environment:
      - CONFIG_DIR=/app/config
      - LOGS_DIR=/app/logs
      - TZ=Europe/London
      - DEBUG=false
      - DEFAULT_THEME=dark
      # Generate a secure key with: openssl rand -hex 24
      - SECRET_KEY=${NUKI_SECRET_KEY:-change_this_to_a_secure_random_key}
    networks:
      - nuki-network
    healthcheck:
      test: ["CMD", "python", "-m", "app.monitoring.health_monitor", "--check-service"]
      interval: 3m
      timeout: 30s
      retries: 3
      start_period: 60s
    # Run as non-root user for security
    user: "${DOCKER_UID:-1000}:${DOCKER_GID:-1000}"
    # Service constraints
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

  nuki-web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    container_name: nuki-web
    restart: unless-stopped
    ports:
      - "${WEB_PORT:-5000}:5000"
    volumes:
      - nuki_config:/app/config:rw
      - nuki_logs:/app/logs:rw
      - nuki_data:/app/data:rw
      - nuki_session:/app/flask_session:rw
    environment:
      - CONFIG_DIR=/app/config
      - LOGS_DIR=/app/logs
      - FLASK_APP=app.web.app
      - FLASK_ENV=production
      - TZ=Europe/London
      - DEFAULT_THEME=dark
      # Use the same secret key as the monitor service
      - SECRET_KEY=${NUKI_SECRET_KEY:-change_this_to_a_secure_random_key}
    networks:
      - nuki-network
    depends_on:
      nuki-monitor:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health", "||", "exit", "1"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 20s
    # Run as non-root user for security
    user: "${DOCKER_UID:-1000}:${DOCKER_GID:-1000}"
    # Service constraints
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M

networks:
  nuki-network:
    driver: bridge

# Use named volumes for better persistence and management
volumes:
  nuki_config:
    driver: local
    driver_opts:
      type: none
      device: ${CONFIG_PATH:-./config}
      o: bind
  nuki_logs:
    driver: local
    driver_opts:
      type: none
      device: ${LOGS_PATH:-./logs}
      o: bind
  nuki_data:
    driver: local
    driver_opts:
      type: none
      device: ${DATA_PATH:-./data}
      o: bind
  nuki_session:
    driver: local
    driver_opts:
      type: none
      device: ${SESSION_PATH:-./flask_session}
      o: bind

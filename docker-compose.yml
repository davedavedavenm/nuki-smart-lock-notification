version: '3.8'

services:
  nuki-monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    container_name: nuki-monitor
    restart: unless-stopped
    volumes:
      # IMPORTANT: These bind mounts require appropriate permissions on the host
      # The 'nuki' user inside the container needs write access to logs and data directories
      # Before starting, run: mkdir -p config logs data && chmod -R 777 logs data
      - ./config:/app/config  # Config directory (primarily needs read access)
      - ./logs:/app/logs      # Logs directory (needs write access)
      - ./data:/app/data      # Data directory (needs write access)
    environment:
      - CONFIG_DIR=/app/config
      - LOGS_DIR=/app/logs
      - TZ=Europe/London
    networks:
      - nuki-network
    healthcheck:
      test: ["CMD", "python", "/app/scripts/health_monitor.py"]
      interval: 5m
      timeout: 20s
      retries: 3
      start_period: 30s

  nuki-web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: nuki-web
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      # IMPORTANT: These bind mounts require appropriate permissions on the host
      # The 'nuki' user inside the container needs write access to logs and data directories
      # Before starting, run: mkdir -p config logs data && chmod -R 777 logs data
      - ./config:/app/config  # Config directory (primarily needs read access)
      - ./logs:/app/logs      # Logs directory (needs write access)
      - ./data:/app/data      # Data directory (needs write access)
    environment:
      - CONFIG_DIR=/app/config
      - LOGS_DIR=/app/logs
      - FLASK_APP=web/app.py
      - FLASK_ENV=production
      - TZ=Europe/London
    networks:
      - nuki-network
    depends_on:
      - nuki-monitor
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  nuki-network:
    driver: bridge
